// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2811.RecycleRush;
    
import com.kauailabs.nav6.frc.IMU;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.BuiltInAccelerometer;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.livewindow.LiveWindowSendable;



/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    
    public static SpeedController frontLeftDrive;
    public static SpeedController frontRightDrive;
    public static SpeedController backLeftDrive;
    public static SpeedController backRightDrive;
    public static RobotDrive robotDrive41;
    
    public static IMU chassisGyro;
    public static SerialPort serialPort;
    public static byte updateRate = 50;

    public static SpeedController intakeRollerL;
    public static SpeedController intakeRollerR;
    public static Solenoid intakeSolenoidL;
    public static Solenoid intakeSolenoidR;
    
    //public static CANTalon elevatorMotor;
    
   
    //public static CANTalon bidentMotor; //Moved to Bident subsystem
    //public static Solenoid bidentSolenoid; //moved to bident subsystem

    public static PowerDistributionPanel powerPanel;
    public static Compressor compressor;
    public static BuiltInAccelerometer onboardAccelerometer;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    public static void init() {
    	
		serialPort = new SerialPort(57600,SerialPort.Port.kMXP);

        frontLeftDrive = new Talon(0);
		LiveWindow.addActuator("Chassis", "FrontLeftDrive", (Talon) frontLeftDrive);
        
        frontRightDrive = new Talon(2);
        LiveWindow.addActuator("Chassis", "FrontRightDrive", (Talon) frontRightDrive);
        
        backLeftDrive = new Talon(1);
        LiveWindow.addActuator("Chassis", "BackLeftDrive", (Talon) backLeftDrive);
        
        backRightDrive = new Talon(3);
        LiveWindow.addActuator("Chassis", "BackRightDrive", (Talon) backRightDrive);
        
        robotDrive41 = new RobotDrive(frontLeftDrive, backLeftDrive,
              frontRightDrive, backRightDrive);
        
        robotDrive41.setSafetyEnabled(true);
        robotDrive41.setExpiration(0.1);
        robotDrive41.setSensitivity(0.5);
        robotDrive41.setMaxOutput(1.0);
        robotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        robotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        
        chassisGyro = new IMU(serialPort,updateRate);
        LiveWindow.addSensor("Chassis", "chassisGyro", chassisGyro);

        
        intakeRollerL = new Talon(4);
        LiveWindow.addActuator("ToteIntake", "ToteRollerL", (Talon) intakeRollerL);
        
        intakeRollerR = new Talon(5);
        LiveWindow.addActuator("ToteIntake", "ToteRollerR", (Talon) intakeRollerR);
        
        intakeSolenoidL = new Solenoid(0, 0);
        LiveWindow.addActuator("ToteIntake", "ToteSolenoidL", intakeSolenoidL);
        
        intakeSolenoidR = new Solenoid(0, 1);
        LiveWindow.addActuator("ToteIntake", "ToteSolenoidR", intakeSolenoidR);
        compressor = new Compressor(59);
        powerPanel = new PowerDistributionPanel();
        onboardAccelerometer = new BuiltInAccelerometer();

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    }
}
