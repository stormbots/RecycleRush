// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2811.RecycleRush.subsystems;

import org.usfirst.frc2811.RecycleRush.RobotMap;
import org.usfirst.frc2811.RecycleRush.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Bident extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANTalon binLifterMotor = RobotMap.bidentMotor;
    Solenoid binSolenoid = RobotMap.bidentSolenoid;
    Ultrasonic binSonarTop = RobotMap.bidentSonarIntake;
    Ultrasonic binSonarBottom = RobotMap.bidentSonarBumper;
    //TODO remove the ultrasonic sensors because they are declared in the code
    public Ultrasonic binRangeTop = new Ultrasonic(0,1);
    public Ultrasonic binRangeBottom = new Ultrasonic(2,3);
    public boolean open = true;
    public boolean close = !open;
    //TODO fix port declaration binRangerTop and Bottom, port are for one wires and need to be two
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public double getDistanceTop(){
    	//
    	binSonarTop.setEnabled(true);
    	//TODO calibrate range maybe...(limits)
    	return binSonarTop.getRangeInches();
    }
    public double getDistanceBumper(){
    	//
    	binSonarBottom.setEnabled(true);
    	//TODO calibrate range maybe...(limits)
    	return binSonarBottom.getRangeInches();
    }
    public void bidentOpen(){
    	binSolenoid.set(open);
    }
    public void bidentClose(){
    	binSolenoid.set(close);
    }
    	
    
}

