// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2811.RecycleRush.subsystems;

import org.usfirst.frc2811.RecycleRush.RobotMap;
import org.usfirst.frc2811.RecycleRush.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.hal.CanTalonSRX;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;


/**
 *
 */
public class ToteElevator extends TalonSRXPIDBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Ultrasonic elevatorSonar = new Ultrasonic(4,5);
    private  DigitalInput elevatorReadySwitch = new DigitalInput(6);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    	//Copy motor instance to ensure this function works right
        useMotor(new CANTalon(4) );
        
        isHomed=false;
        init();
        
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    public double getDistanceToTote(){
    	double distance=0;
    	if(elevatorSonar.isRangeValid() && elevatorSonar.isEnabled()){
        	distance= elevatorSonar.getRangeInches();
        } else if (elevatorSonar.isEnabled() == false) {
        	distance= -1;
        } else if (elevatorSonar.isRangeValid() == false) {
        	distance= -2;
        } else {
        	System.out.println("B0RK3D!!!1!");
        	distance = -3;
        }
    	return distance;
    }
    
    public void init (){
    	motor.changeControlMode(CANTalon.ControlMode.Position);
    	motor.setFeedbackDevice(CANTalon.FeedbackDevice.QuadEncoder);//  changeFeedbackDevice(CANTalon.ControlMode.Position);
    	setpoint=motor.getPosition();
    	double p = 2;
    	double i = 0.01;
    	double d = 0;
    	double f = 0;
    	int izone = 0; 
    	double ramprate = 0;// who knows what this will do
    	int profile = 0; 
    	motor.setPID(p,i,d,f,izone,ramprate,profile);
    	elevatorSonar.setEnabled(true);
    	elevatorSonar.setAutomaticMode(true);   	

    }

    public boolean switchIsPressed(){
    	return elevatorReadySwitch.get()==true;
    	//TODO Make sure this is the correct reading for have a tote
    }
    

}

